```bash
# check if xenon cli can be found and works (should print a line about usage)
xenon

# get some help
xenon --help

# check the version (should return 2.x.x)
xenon --version

# I want to do something with files
xenon filesystem --help

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# usage line suggests I need to pick at least one from {file,ftp,sftp,webdav}
# not sure what to do yet, let's keep it simple and ask for help on (local) 
# file manipulation
# FIXME add longer --help alternative to existing -h option for 'xenon filesystem file' 
# command (functionality seems to exist, but not included in usage line)
xenon filesystem file --help

# 'xenon filesystem file' usage line seems to suggest that I need to pick one
# from {copy,list,mkdir,remove,rename}. simplest one is probably 'list', so:
xenon filesystem file list --help
# so I need a 'path' as final argument
# TODO add examples of valid paths

# valid syntax, absolute paths
xenon filesystem file list .
xenon filesystem file list $PWD
xenon filesystem file list $HOME
xenon filesystem file list /tmp
xenon filesystem file list /tmp/
# valid, but returns error because env var is empty
xenon filesystem file list $NON_EXISTENT_ENV_VAR

# valid syntax, relative paths
xenon filesystem file list tmp
xenon filesystem file list build
xenon filesystem file list ./build
xenon filesystem file list build/install
xenon filesystem file list build/install/..

# additional options
xenon filesystem file list --hidden .
xenon filesystem file list --recursive .
xenon filesystem file list --hidden --recursive .

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #

# let's try to copy a file, first make it
cd /home/daisycutter/tmp
touch testfile.txt

# check the help
xenon filesystem file --help
# so need 'copy' argument
xenon filesystem file copy --help

# first try without any optional arguments
xenon filesystem file copy testfile.txt testfile.copy.txt
# absolute paths
rm testfile.copy.txt
xenon filesystem file copy /home/daisycutter/tmp/testfile.txt /home/daisycutter/tmp/testfile.copy.txt

# try recursive copy...works
xenon filesystem file copy --recursive thedir thecopieddir
# try again:
xenon filesystem file copy --recursive thedir thecopieddir
returns an error (on the first existing path?)
xenon filesystem file copy --recursive --replace thedir thecopieddir

# standard in / out
cat testfile1024.txt | xenon filesystem file copy - mystdin.txt
# FIXME message is a bit strange, standard in is represented as '/-'
xenon filesystem file copy testfile1024.txt - 1> mystdout.txt

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #

xenon filesystem file mkdir xenoncli-made-this-dir
# FIXME xenon filesystem file mkdir says location '/' while xenon filesystem file copy says location 'local'
xenon filesystem file mkdir --parents xenoncli-made-this-dir/thesubdir/thesubsubdir

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #

xenon filesystem file copy --recursive xenoncli-made-this-dir xenoncli-copied-this-dir
xenon filesystem file rename xenoncli-copied-this-dir/ xenoncli-moved-this-dir

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #

xenon filesystem file remove --recursive xenoncli-moved-this-dir/
xenon filesystem file remove xenoncli-made-this-dir/thesubdir/thesubsubdir

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
 
# now let's see if we can use schedulers, starting with slurm
# first need to bring up a 'remote' slurm
# we'll use a slurm docker container called nlesc/xenon-slurm from dockerhub
docker run --detach --publish 10022:22 nlesc/xenon-slurm:17

# use docker ps to check the state of the container
docker ps
# once the status is healthy, see if we can ssh into it as user 'xenon' with password 'javagat'
ssh -p 10022 xenon@localhost
# if that works, exit again

# let's see what help is available for slurm
xenon scheduler slurm --help

# let's first ask what queues the slurm scheduler has. need to specify location, otherwise we don't 
# know who to ask. location is any location supported by ssh or local scheduler.
xenon scheduler slurm --location ssh://xenon@localhost queues    # errors, invalid location string format I think
xenon scheduler slurm --location ssh://localhost queues          # also errors
xenon scheduler slurm --location localhost queues                # error because it tries to connect to default port 22 (should be 10022)
# check the xenon scheduler ssh --help help to find out the valid syntax for location
# FIXME help text for xenon scheduler slurm could mention ssh scheduler adaptor under --location; now only says ssh
xenon scheduler ssh --help
xenon scheduler slurm --location localhost:10022 queues          # immediately returns authentication timeout error (a bit confusing, it's not a timeout issue I think FIXME)
# we need to also provide credentials
xenon scheduler slurm --help
# so --username and --password
xenon scheduler slurm --username xenon --password javagat --location localhost:10022 queues   # winning!
# returns:
Available queues: mypartition, otherpartition
Default queue: mypartition

# what else we got
xenon scheduler slurm --help
# listing job queues
xenon scheduler slurm --username xenon --password javagat --location localhost:10022 list     # works, not very exciting because empty

# let's try to run an executable 
xenon scheduler slurm --username xenon --password javagat --location localhost:10022 exec     # returns error of course, but FIXME does not mention --password or --username

# usage string suggests that I need to provide (the path of) an executable residing in the container. For example, /bin/hostname

xenon scheduler slurm --username xenon --password javagat --location localhost:10022 exec /bin/hostname
# returns the image id of the docker container, all good

# what about an 'ls' (/bin/ls)
xenon scheduler slurm --username xenon --password javagat --location localhost:10022 exec /bin/ls
# returns the listing for the current directory (the last WORKDIR? or the place where SSH ends up? not sure)

# usage string suggests you can set the working directory:
xenon scheduler slurm --username xenon --password javagat --location localhost:10022 exec --working-directory /home/xenon /bin/ls     # all good

# try other directory
xenon scheduler slurm --username xenon --password javagat --location localhost:10022 exec --working-directory /home/xenon/filesystem-test-fixture /bin/ls 

# misspelled directory 
xenon scheduler slurm --username xenon --password javagat --location localhost:10022 exec --working-directory /home/xenon/filesystem-test-fxture /bin/ls 
# says dir doesn't exist

# try with arguments to the executable (prepend -l option with ' -- ') 
xenon scheduler slurm --username xenon --password javagat --location localhost:10022 exec ls -- -l
xenon scheduler slurm --username xenon --password javagat --location localhost:10022 exec ls -- -la
xenon scheduler slurm --username xenon --password javagat --location localhost:10022 exec ls -- -lR
xenon scheduler slurm --username xenon --password javagat --location localhost:10022 exec ls -- -l --human-readable

# these two work as expected:
xenon scheduler slurm --username xenon --password javagat --location localhost:10022 exec which sleep
xenon scheduler slurm --username xenon --password javagat --location localhost:10022 exec sleep 20

# FIXME not sure about difference between --max-time and --wait-timeout (their time units differ by a factor 1000*60 which is confusing; maybe reflect the units in the name of the option)

# FIXME doesn't look like --max-time does anything; could be due to how slurm is configured in the docker container:
date;xenon scheduler slurm --username xenon --password javagat --location localhost:10022 exec --max-time 1 sleep 600;date
Tue Aug  1 15:13:51 CEST 2017
Tue Aug  1 15:23:55 CEST 2017

# let's try adding some verbosity
xenon --verbose scheduler slurm --username xenon --password javagat --location localhost:10022 exec sleep 5
xenon -v scheduler slurm --username xenon --password javagat --location localhost:10022 exec sleep 5
xenon -vvvv scheduler slurm --username xenon --password javagat --location localhost:10022 exec sleep 5

# check if you can provide passwords from a file
echo javagat > password.txt & xenon scheduler slurm --username xenon --password @password.txt --location localhost:10022 exec /bin/hostname

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #

# time to submit stuff, check the xenon scheduler slurm submit help
xenon scheduler slurm submit --help
# FIXME help text for --working-directory Path at location where executable should be executed. If not given will local working directory or when remove will use home directory

xenon scheduler slurm --username xenon --password javagat --location localhost:10022 submit ls -- -la
xenon scheduler slurm --username xenon --password javagat --location localhost:10022 submit --env MYKEY=myvalue env
xenon scheduler slurm --username xenon --password javagat --location localhost:10022 submit --env MYKEY=myvalue --stdout=out.txt env

# check to see if the output from 'env' was written to file /home/xenon/out.txt
ssh -p 10022 xenon@localhost ls -l
# see what's in it
ssh -p 10022 xenon@localhost cat out.txt

# let's copy it back to our local system 
# can't use xenon filesystem file like before, because we're copying between file systems, so let's look at what other options are available
xenon filesystem --help
# let's try sftp
xenon filesystem sftp --help
# so basic syntax is
xenon filesystem sftp --location localhost:10022 --username xenon --password javagat <something>
# we could list the contents of the remote system
# but how:
xenon filesystem sftp list --help
xenon filesystem sftp --location localhost:10022 --username xenon --password javagat list /home/xenon

xenon filesystem sftp --location localhost:10022 --username xenon --password javagat list --hidden /home/xenon

# let's see what --long brings
xenon filesystem sftp --location localhost:10022 --username xenon --password javagat list --long /home/xenon

# what about JSON format?
xenon --json filesystem sftp --location localhost:10022 --username xenon --password javagat list --long /home/xenon
# returns a whole bunch of JSON

# in combination with --recursive
xenon --json filesystem sftp --location localhost:10022 --username xenon --password javagat list --long --recursive /home/xenon

# let's try to download the log file /home/xenon/out.txt
xenon filesystem sftp --location localhost:10022 --username xenon --password javagat download --help
xenon filesystem sftp --location localhost:10022 --username xenon --password javagat download /home/xenon/out.txt /home/daisycutter/tmp/out.txt
# what happens if local file exists
xenon filesystem sftp --location localhost:10022 --username xenon --password javagat download /home/xenon/out.txt /home/daisycutter/tmp/out.txt
# error message and aborted # FIXME maybe we should use the term aborted for partially successful recursive copies
# what happens if remote file does not exist
xenon filesystem sftp --location localhost:10022 --username xenon --password javagat download /home/xenon/doesnotexist.txt /home/daisycutter/tmp/doesnotexist.txt
# xenon says does not exist, nice

# can we copy remote file to local dir?
xenon filesystem sftp --location localhost:10022 --username xenon --password javagat download /home/xenon/out.txt /home/daisycutter/tmp
xenon filesystem sftp --location localhost:10022 --username xenon --password javagat download /home/xenon/out.txt /home/daisycutter/tmp/
# no on both accounts # TODO maybe we should add that

# what about directories?
xenon filesystem sftp --location localhost:10022 --username xenon --password javagat download /home/xenon/filesystem-test-fixture /home/daisycutter/tmp/thedir
# complains about source being a directory, TODO maybe add a mention of --recursive?

xenon filesystem sftp --location localhost:10022 --username xenon --password javagat download --recursive /home/xenon/filesystem-test-fixture /home/daisycutter/tmp/thedir
# FIXME only copies files and directories, not links

# with relative target path
xenon filesystem sftp --location localhost:10022 --username xenon --password javagat download /home/xenon/out.txt out.txt

# with relative source path
xenon filesystem sftp --location localhost:10022 --username xenon --password javagat download out.txt /home/daisycutter/tmp/out.txt
# says 
# sftp adaptor: No such file out.txt

# Q: is there a starting directory somehow? It's / I think

# let's try to do recursively copy of whatever directory we land in to local system:
xenon filesystem sftp --location localhost:10022 --username xenon --password javagat download --recursive . thedir
sftp adaptor: SFTP error (SSH_FX_PERMISSION_DENIED): Permission denied

# not sure what . means in this context, from the error it could be / ...? at least this generates the same error
xenon filesystem sftp --location localhost:10022 --username xenon --password javagat download --recursive / thedir
# and 
xenon filesystem sftp --location localhost:10022 --username xenon --password javagat list .
# lists the contents of /
# Q maybe disallow the use of . as a remote location
# Q should we have a default value for path, such that xenon filesystem sftp list <empty location> returns list of / for example.

# back to xenon filesystem sftp download, let
xenon filesystem sftp --location localhost:10022 --username xenon --password javagat download --recursive /home thedir
xenon filesystem sftp --location localhost:10022 --username xenon --password javagat download --recursive /home /home/daisycutter/tmp/thedir

# TODO because we don't support directories in the location (I think), the source path is effectively always an absolute path. Maybe say so in the docs?

# print on local system's standard out
xenon filesystem sftp --location localhost:10022 --username xenon --password javagat download /home/xenon/out.txt -

echo 'this is coming from stdin through a file' > stdin.txt
xenon filesystem sftp --location localhost:10022 --username xenon --password javagat upload stdin.txt /home/xenon/stdin.txt
xenon scheduler slurm --location localhost:10022 --username xenon --password javagat submit --stdin /home/xenon/stdin.txt --stdout /home/xenon/stdout.txt cat 
xenon filesystem sftp --location localhost:10022 --username xenon --password javagat download /home/xenon/stdout.txt stdout.txt

xenon scheduler slurm --location localhost:10022 --username xenon --password javagat submit sleep 100
# on return says job identifier is e.g. 10
# while the sleep job is running, do
xenon scheduler slurm --location localhost:10022 --username xenon --password javagat list                         # this queue has job 10 in it
xenon scheduler slurm --location localhost:10022 --username xenon --password javagat list --queue mypartition     # this queue has job 10 in it
xenon scheduler slurm --location localhost:10022 --username xenon --password javagat list --queue otherpartition  # this queue is empty

# submit 3 sleep jobs one after the other
xenon scheduler slurm --location localhost:10022 --username xenon --password javagat submit sleep 100
xenon scheduler slurm --location localhost:10022 --username xenon --password javagat submit sleep 100
xenon scheduler slurm --location localhost:10022 --username xenon --password javagat submit sleep 100
# check the response, job ids are 12-14

# remove job id 13
xenon scheduler slurm --location localhost:10022 --username xenon --password javagat remove 13

# check the queues
xenon scheduler slurm --location localhost:10022 --username xenon --password javagat list   # only has job 12 and 14

# capturing job ids in scripts
JOBID=$(xenon scheduler slurm --location localhost:10022 --username xenon --password javagat submit sleep 100)
xenon scheduler slurm --location localhost:10022 --username xenon --password javagat remove $JOBID

```

counts (commit 10cff722c57e842e4380d1cbb7adc171208f9148)

86 xenon
57 xenon filesystem
31 xenon filesystem file
 9 xenon filesystem file copy
15 xenon filesystem file list
 2 xenon filesystem file mkdir
 2 xenon filesystem file remove
 1 xenon filesystem file rename
24 xenon filesystem sftp
 0 xenon filesystem sftp copy
 1 xenon filesystem sftp upload
16 xenon filesystem sftp download
 5 xenon filesystem sftp list
 0 xenon filesystem sftp mkdir
 0 xenon filesystem sftp remove
 0 xenon filesystem sftp rename
40 xenon scheduler 
39 xenon scheduler slurm
14 xenon scheduler slurm exec
10 xenon scheduler slurm submit
 5 xenon scheduler slurm list
 2 xenon scheduler slurm remove
 5 xenon scheduler slurm queues
 1 xenon scheduler ssh
 0 xenon scheduler ssh exec
 0 xenon scheduler ssh queues

