--- 
dist: bionic
matrix: 
  include: 
    - 
      name: "Bash snippets using xenon-cli"
      language: bash
      services: 
        - docker
      before_install: 
        - "docker pull xenonmiddleware/slurm:17"
      install: 
        - "sudo apt install -y openjdk-11-jre"
        - "wget https://github.com/xenon-middleware/xenon-cli/releases/download/v3.0.1/xenon-cli-shadow-3.0.1.tar"
        - "tar -xvf xenon-cli-shadow-3.0.1.tar"
        - "mkdir -p /home/travis/.local/bin/xenon"
        - "mv xenon-cli-shadow-3.0.1 /home/travis/.local/bin/xenon/"
        - "echo '' >> /home/travis/.bashrc"
        - "echo '# add xenon-cli directory to PATH' >> /home/travis/.bashrc"
        - "echo 'PATH=$PATH:/home/travis/.local/bin/xenon/xenon-cli-shadow-3.0.1/bin' >> /home/travis/.bashrc"
        - "source /home/travis/.bashrc"
        - "chmod go-w /home/travis"
        - "chmod 700 /home/travis/.ssh"
        - "cp vm-prep/.ssh/known_hosts /home/travis/.ssh/known_hosts"
        - "cp vm-prep/.ssh/config /home/travis/.ssh/config"
        - "bash vm-prep/print-ssh-permissions.sh"
        - "which xenon"
      before_script: 
        - "docker run --detach --publish 10022:22 --hostname slurm17 xenonmiddleware/slurm:17"
        - "bash vm-prep/make-fixtures.sh"
        - "cd readthedocs/code-tabs/bash"
        - "docker images"
        - "docker ps -a"
      script: 
        - "bash travis.sh"
    - 
      name: "Java snippets that use xenon library directly"
      language: java
      jdk: openjdk11
      env:
        - TERM=dumb
      before_cache: 
        - "rm -f  $HOME/.gradle/caches/modules-2/modules-2.lock"
        - "rm -fr $HOME/.gradle/caches/*/plugin-resolution/"
      cache: 
        directories: 
          - $HOME/.gradle/caches/
          - $HOME/.gradle/wrapper/
      before_install: 
        - "sudo apt install -y openjdk-11-jre"
      before_script: 
        - "chmod go-w /home/travis"
        - "chmod 700 /home/travis/.ssh"
        - "cp vm-prep/.ssh/known_hosts /home/travis/.ssh/known_hosts"
        - "cp vm-prep/.ssh/config /home/travis/.ssh/config"
        - "bash vm-prep/print-ssh-permissions.sh"
        - "bash vm-prep/make-fixtures.sh"
        - "cd readthedocs/code-tabs/java"
      script: 
        - "TERM=dumb ./gradlew check"
    -
      name: "Python snippets using pyxenon and xenon-grpc"
      language: python
      before_install: 
        - "docker pull xenonmiddleware/slurm:17"
      install: 
        - "sudo apt install -y openjdk-11-jre"
        - "pip install -r readthedocs/code-tabs/python/requirements.txt"
        - "pip install -r readthedocs/code-tabs/python/requirements-dev.txt"
        - "chmod go-w /home/travis"
        - "chmod 700 /home/travis/.ssh"
        - "cp vm-prep/.ssh/known_hosts /home/travis/.ssh/known_hosts"
        - "cp vm-prep/.ssh/config /home/travis/.ssh/config"
        - "bash vm-prep/print-ssh-permissions.sh"
        - "which xenon-grpc"
      before_script: 
        - "bash vm-prep/make-fixtures.sh"
        - "cd readthedocs/code-tabs/python"
        - "docker run --detach --publish 10022:22 --hostname slurm17 xenonmiddleware/slurm:17"
      script: 
        - "pytest tests/ --ignore=tests/test_upload_file_local_to_sftp_absolute_paths.py --ignore=tests/test_download_file_sftp_to_local_absolute_paths.py"
      services: 
        - docker
    -
      name: "Checks whether software versions are consistent throughout the repository"
      language: bash
      script:
         - "bash consistent-versions-test.sh"
notifications: 
  email: 
    on_failure: change
    on_succes: never
